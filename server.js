// Generated by CoffeeScript 1.7.1
(function() {
  var app, bodyParser, createReadStream, express, host, port, webshot;

  webshot = require('webshot');

  createReadStream = require('fs').createReadStream;

  express = require('express');

  bodyParser = require('body-parser');

  app = express();

  app.use(bodyParser());

  app.use(app.router);

  app.post('/process', function(req, res) {
    var address, filename, json, options, p, _ref, _ref1;
    console.log(req.body);
    _ref = req.body, filename = _ref.filename, address = _ref.address, json = _ref.json;
    options = JSON.parse(json);
    if (options.shotSize.type !== 'custom') {
      options.shotSize = options.shotSize.type;
    }
    if (((_ref1 = options.html) != null ? _ref1.length : void 0) > 0) {
      address = options.html;
      delete options.html;
      options.siteType = 'html';
    }
    if (options.userAgent == null) {
      options.userAgent = 'Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1667.0 Safari/537.36';
    }
    p = '/tmp/webshot/' + filename;
    return webshot(address, p, options, function(err) {
      if (err != null) {
        console.log(err);
        return res.send(500);
      } else {
        return res.send(200);
      }
    });
  });

  app.get('/images/:file', function(req, res) {
    var filename;
    filename = '/tmp/webshot/' + req.params.file;
    return res.sendfile(filename, {
      maxAge: 1000 * 60 * 60 * 24 * 365 * 10
    });
  });

  host = process.env.OPENSHIFT_NODEJS_IP || '127.0.0.1';

  port = process.env.OPENSHIFT_NODEJS_PORT || 8080;

  app.listen(port, host);

}).call(this);
